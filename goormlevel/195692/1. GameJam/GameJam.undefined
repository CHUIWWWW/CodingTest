# # -*- coding: utf-8 -*-
# # UTF-8 encoding when using korean
import sys
N = int(sys.stdin.readline())
maps = []
goorm_x, goorm_y = map(int, sys.stdin.readline().strip().split())
player_x, player_y = map(int, sys.stdin.readline().strip().split())

goorm_x, goorm_y = goorm_x-1, goorm_y-1
player_x, player_y = player_x-1, player_y-1

for _ in range(N):
	cnt_comm = list(sys.stdin.readline().strip().split())
	maps.append(cnt_comm)

#URDL
dxs = [-1, 0, 1, 0]
dys = [0, 1, 0, -1]

def check_dir(c):
	if c == 'U':
		move_dir = 0
	elif c == 'R':
		move_dir = 1
	elif c == 'D':
		move_dir = 2
	elif c == 'L':
		move_dir = 3
		
	return move_dir

#시작점 1칸 갖고 시작
g_is_visited = [[0]*N for _ in range(N)]
p_is_visited = [[0]*N for _ in range(N)]
g_is_visited[goorm_x][goorm_y] += 1
p_is_visited[player_x][player_y] += 1

def game(N, is_visited, x, y):
	cnt = 1
	while True:
		count, command = int(maps[x][y][:-1]), maps[x][y][-1]
		move_dir = check_dir(command)
		#이동 경로 확인
		for _ in range(count):
			nx, ny = (x+dxs[move_dir])%N, (y+dys[move_dir])%N
		
			if is_visited[nx][ny]:
				return cnt 
		
			else:
				is_visited[nx][ny] += 1
				cnt += 1
				x, y = nx, ny

goorm_cnt = game(N, g_is_visited, goorm_x, goorm_y)
player_cnt = game(N, p_is_visited, player_x, player_y)

if goorm_cnt > player_cnt:
	print('goorm %d' %goorm_cnt)
else:
	print('player %d' %player_cnt)

# N = int(input())

# # 상, 하, 좌, 우
# direction = {'U': [-1,0], 'D': [1,0], 'L':[0,-1], 'R' : [0, 1]}

# # 게임 참가자 좌표
# rg,cg = map(int, input().split())
# rp,cp = map(int, input().split())

# # N*N 격자 보드
# goorm = [[0 for _ in range(N)] for _ in range(N)]
# player = [[0 for _ in range(N)] for _ in range(N)]

# rg, cg = rg-1,cg-1
# rp, cp = rp-1,cp-1 

# goorm[rg][cg] = 1
# player[rp][cp] = 1

# # game board
# board = [list(input().split()) for _ in range(N)]

# while True:
# 	flag = False
	
# 	#count, command
# 	g_Count,g_Command = int(board[rg][cg][0]), board[rg][cg][1]

# 	#move
# 	g_Move = direction[g_Command]

# 	#goorm Play
# 	for g in range(g_Count):
# 		rg = (rg + g_Move[0]) % N
# 		cg = (cg + g_Move[1]) % N
		
# 		# 지나가지 않았을 경우 1 입력
# 		if goorm[rg][cg] == 0:
# 			goorm[rg][cg] = 1
# 		# 지나갔을 경우 게임 끝
# 		else:
# 			flag = True
# 			break
	
# 	if flag:
# 		break

# while True:
# 	flag = False
	
# 	#count, command
# 	p_Count,p_Command = int(board[rp][cp][0]), board[rp][cp][1]
	
# 	#move
# 	p_Move = direction[p_Command]
	
# 	#player Play
# 	for p in range(p_Count):
# 		rp = (rp + p_Move[0]) % N
# 		cp = (cp + p_Move[1]) % N
		
# 		if player[rp][cp] == 0:
# 			player[rp][cp] = 1
# 		else:
# 			flag = True
# 			break
# 	if flag:
# 		break

# gPoint = 0
# pPoint = 0
# for i in range(N):
# 	for j in range(N):
# 		if goorm[i][j] == 1:
# 			gPoint += 1
# 		if player[i][j] == 1:
# 			pPoint += 1

# if gPoint > pPoint:
# 	print('goorm',gPoint)
# else:
# 	print('player',pPoint)